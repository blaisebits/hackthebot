description: >
  Nmap ("Network Mapper") is an open source tool for network exploration and security auditing. It was designed to rapidly scan large networks, although it works fine against single hosts. Nmap uses raw IP packets in novel ways to determine what hosts are available on the network, what services (application name and version) those hosts are offering, what operating systems (and OS versions) they are running, what type of packet filters/firewalls are in use, and dozens of other characteristics. While Nmap is commonly used for security audits, many systems and network administrators find it useful for routine tasks such as network inventory, managing service upgrade schedules, and monitoring host or service uptime.
  The output from Nmap is a list of scanned targets, with supplemental information on each depending on the options used. Key among that information is the "interesting ports table".. That table lists the port number and protocol, service name, and state. The state is either open, filtered, closed, or unfiltered. Open. means that an application on the target machine is listening for connections/packets on that port. Filtered. means that a firewall, filter, or other network obstacle is blocking the port so that Nmap cannot tell whether it is open or closed. Closed. ports have no application listening on them, though they could open up at any time. Ports are classified as unfiltered. when they are responsive to Nmap's probes, but Nmap cannot determine whether they are open or closed. Nmap reports the state combinations open|filtered. and closed|filtered. when it cannot determine which of the two states describe a port. The port table may also include software version details when version detection has been requested. When an IP protocol scan is requested (-sO), Nmap provides information on supported IP protocols rather than listening ports.
  In addition to the interesting ports table, Nmap can provide further information on targets, including reverse DNS names, operating system guesses, device types, and MAC addresses.

functions:
  nmap_tcp_ports_syn_scan:
    description: Scan one or more targets for the list of common TCP ports using a TCP SYN scan.
    parameters:
      target:
        type: string
        description: The IP address, CIDR, range or hostname to scan.
        examples:
          - 192.168.1.1
          - 192.168.1.0/24
          - scanme.nmap.org

    container:
      build: 
        path: ${cwd}/nmap.Dockerfile
        name: nmap_local
      args:
        - --net=host
      volumes:
        - ${cwd}:/data

    cmdline:
      - nmap
      - -sS
      - -Pn
      - -A
      - -oX
      - '-'
      - --open
      - ${target}

  nmap_udp_ports_scan:
    description: Scan one or more targets for the list of common UDP ports.
    parameters:
      target:
        type: string
        description: The IP address, CIDR, range or hostname to scan.
        examples:
          - 192.168.1.1
          - 192.168.1.0/24
          - scanme.nmap.org

    container:
      build: 
        path: ${cwd}/nmap.Dockerfile
        name: nmap_local
      args:
        - --net=host
      volumes:
        - ${cwd}:/data

    cmdline:
      - nmap
      - -sU
      - -A
      - --open
      - -oX
      - '-'
      - ${target}
  nmap_host_discovery:
    description: Used to discover unknown hosts that could be online and reachable.
    parameters:
      target:
        type: string
        description: The IP address, CIDR, range or hostname to scan.
        examples:
          - 192.168.1.1
          - 192.168.1.0/24
          - scanme.nmap.org

    container:
      build: 
        path: ${cwd}/nmap.Dockerfile
        name: nmap_local
      args:
        - --net=host
      volumes:
        - ${cwd}:/data

    cmdline:
      - nmap
      - -PE
      - -PS80,443,3389
      - -PP
      - -PU161,40125
      - -PA21
      - --source-port
      - '53'
      - --open
      - -oX
      - '-'
      - ${target}
  nmap_tcp_ports_syn_scan_all_ports:
    description: Scan one or more targets for the list of common TCP ports using a TCP SYN scan.
    parameters:
      target:
        type: string
        description: The IP address, CIDR, range or hostname to scan.
        examples:
          - 192.168.1.1
          - 192.168.1.0/24
          - scanme.nmap.org

    container:
      build: 
        path: ${cwd}/nmap.Dockerfile
        name: nmap_local
      args:
        - --net=host
      volumes:
        - ${cwd}:/data

    cmdline:
      - nmap
      - -Pn
      - --open
      - -p-
      - -T4
      - -oX
      - '-'
      - ${target}
  nmap_service_enumeration:
    description: Scan one or more targets to enumerate the service running on a list of ports.
    parameters:
      target:
        type: string
        description: The IP addresses, CIDR range, or hostname to scan.
        examples:
          - 192.168.1.1
          - 192.168.1.0/24
          - scanme.nmap.org
          - 192.168.1.1 192.168.1.10 192.168.1.30
      ports:
        type: string
        description: Comma separated list of ports to scan.
        examples:
          - 80
          - 80,443
          - 22,445,8080,31337

    container:
      build: 
        path: ${cwd}/nmap.Dockerfile
        name: nmap_local
      args:
        - --net=host
      volumes:
        - ${cwd}:/data

    cmdline:
      - nmap
      - -Pn
      - --open
      - -p ${ports}
      - -sVC
      - -T4
      - --open
      - -oX
      - '-'
      - ${target}
